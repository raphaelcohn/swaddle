# This file is part of shellfire swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of shellfire swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of shellfire swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


core_usesIn swaddle build repository configure/register
core_usesIn configure

swaddle_all()
{
	core_functions_execute _swaddle_functions "$@"
}

core_functions_register _swaddle_functions swaddle_makeSwaddlesPathAbsolute
swaddle_makeSwaddlesPathAbsolute()
{
	pushd "$swaddle_swaddlingPath"
		swaddle_swaddlingPath="$(pwd)"
	popd
}

core_dependency_requires '*' mkdir
core_functions_register _swaddle_functions swaddle_createOutputFolder
swaddle_createOutputFolder()
{
	mkdir -m 0700 -p "$swaddle_outputPath" 2>/dev/null || true
	pushd "$swaddle_outputPath"
		swaddle_outputPath="$(pwd)"
	popd
	
	if core_variable_isTrue "$swaddle_cleanOutput"; then
		set +f
		rm -rf "$swaddle_outputPath"/*
		set +f
	fi
}

core_dependency_requires '*' mkdir
core_functions_register _swaddle_functions swaddle_createTemporaryFolder
swaddle_createTemporaryFolder()
{
	if core_variable_isUnset swaddle_temporaryPath; then
		local TMP_FOLDER
		core_temporaryFiles_newFolderToRemoveOnExit
		swaddle_temporaryPath="$TMP_FOLDER"
	else
		mkdir -m 0700 -p "$swaddle_temporaryPath" 2>/dev/null || true
		pushd "$swaddle_temporaryPath"
			swaddle_temporaryPath="$(pwd)"
		popd
	fi
}

core_dependency_requires '*' mkdir
core_functions_register _swaddle_functions swaddle_createPackagesFolder
swaddle_createPackagesFolder()
{
	_swaddle_temporaryFolderPath="$swaddle_temporaryPath"/swaddling
	rm -rf "$_swaddle_temporaryFolderPath"|| core_exitError $core_commandLine_exitCode_CANTCREAT "Can not recreate temporary swaddling path '$_swaddle_temporaryFolderPath'."
	mkdir -m 0700 -p "$_swaddle_temporaryFolderPath"
}

core_functions_register _swaddle_functions swaddle_registerConfiguration
swaddle_registerConfiguration()
{
	core_functions_execute _swaddle_configure_register_functions "$@"
}

core_functions_register _swaddle_functions swaddle_resetConfiguration
swaddle_resetConfiguration()
{
	configure_reset swaddle
	configure_reset swaddle_github
}

core_functions_register _swaddle_functions swaddle_sourceConfiguration
swaddle_sourceConfiguration()
{
	configure_source "$swaddle_swaddlingPath" swaddling
}

core_functions_register _swaddle_functions swaddle_publishersPrepare
swaddle_publishersPrepare()
{
	swaddle_publishers_initialise
	
	swaddle_publishers_iterate prepare
}

core_functions_register _swaddle_functions swaddle_createDownloadFolder
swaddle_createDownloadFolder()
{
	_swaddle_outputDownloadPath=$swaddle_outputPath/download
	mkdir -m 0755 -p "$_swaddle_outputDownloadPath"
}

core_functions_register _swaddle_functions swaddle_build
swaddle_build()
{
	core_variable_array_iterate swaddle_swaddling swaddle_build_all
	swaddle_repository apt deb
	swaddle_repository yum rpm
	
	swaddle_webserverFiles_create "$_swaddle_outputDownloadPath"
	
	swaddle_gpg_publishSigningKey
}

core_functions_register _swaddle_functions swaddle_resetConfiguration
core_functions_register _swaddle_functions swaddle_sourceConfiguration
core_functions_register _swaddle_functions swaddle_publishersFinish
swaddle_publishersFinish()
{
	swaddle_publishers_iterate finish
}
