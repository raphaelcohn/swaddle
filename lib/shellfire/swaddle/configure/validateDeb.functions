# This file is part of shellfire swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of shellfire swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright © 2014-2015 The developers of shellfire swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


# This file is part of shellfire swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of shellfire swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright © 2014-2015 The developers of shellfire swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


# Derived from http://packages.ubuntu.com/lucid/
core_snippet_embed raw validate_deb_section
configure_validate_DebSection()
{
	configure_isValueValid validate_deb_section "$1"
}

#https://www.debian.org/doc/manuals/debian-faq/ch-pkg_basics.en.html#s-priority
core_snippet_embed raw validate_deb_priority
configure_validate_DebPriority()
{
	configure_isValueValid validate_deb_priority "$1"
}

core_snippet_embed raw validate_deb_component
configure_validate_DebComponent()
{
	configure_isValueValid validate_deb_component "$1"
}

core_snippet_embed raw validate_deb_multiarch
configure_validate_DebMultiArch()
{
	configure_isValueValid validate_deb_multiarch "$1"
}

core_snippet_embed raw validate_deb_task
configure_validate_DebTask()
{
	configure_isValueValid validate_deb_task "$1"
}

configure_validate_DebPackageArchitecture()
{
	if [ "$1" = 'all' ]; then
		return 0
	fi
	configure_validateAptArchitecture "$1"
}

configure_validate_DebCompression()
{
	case "$1" in

		none|gzip|bzip2|lzma|xz)
			:
		;;

		*)
			core_exitError $core_commandLine_exitCode_CONFIG "The configuration setting '$configurationSettingName' ('$1') is not a valid compression (it must be one of 'none', 'gzip', 'bzip2', 'lzma' or 'xz')."
		;;
		
	esac
}