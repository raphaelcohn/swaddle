# This file is part of swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


core_usesIn xmlwriter
core_usesIn swaddle touch digest compress
core_usesIn swaddle/repository/yum primaryXmlFile otherXmlFile filelistsXmlFile compsXmlFile

core_dependency_requires '*' mkdir date
swaddle_repository_yum()
{	
	local repositoryName="$(configure_getValue swaddle repository_name)"
	local hostBaseUrl
	swaddle_repository_yum_adjustUrl hostBaseUrl "$(configure_getValue swaddle host_base_url)"

	local _swaddle_repository_yum_repositoryPath="$_swaddle_repository_parentPath"/"$repositoryName"
	local _swaddle_repository_yum_repodataPath="$_swaddle_repository_yum_repositoryPath"/repodata
	
	swaddle_repository_yum_createRepoFile
	swaddle_repository_yum_createMirrorlist
	swaddle_repository_yum_exportSigningKey
	
	swaddle_repository_yum_signRepomdForSuse
	
	swaddle_repository_yum_createInstallScript
	swaddle_repository_yum_releaseNotes
}

swaddle_repository_yum_registerConfiguration()
{
	configure_register Array NotEmpty swaddle_yum mirrors
}

swaddle_repository_yum_releaseNotes()
{
	local downloadKeyAdditionalMarkdown=''
	if core_variable_isTrue "$(swaddle_configure_sign)"; then
		downloadKeyAdditionalMarkdown=" (The key can also be downloaded from [RPM-GPG-KEY-$repositoryName](${hostBaseUrl}yum/$(configure_getValue swaddle repository_name)/RPM-GPG-KEY-$repositoryName \"RPM-GPG-KEY-$repositoryName\") or [repodata/repomd.xml.key](${hostBaseUrl}yum/$(configure_getValue swaddle repository_name)/repodata/repomd.xml.key \"SuSE repomd.xml.key\") for SuSE)."
	fi
	
	swaddle_publishers_githubreleases_augmentReleaseMarkdownBody "
##### Yum Repository

There is a [Yum repository]((${hostBaseUrl}yum/$(configure_getValue swaddle repository_name)/ \"Yum repository for $(configure_getValue swaddle repository_name)\"). It is multi-architecture. Packages and the [repomd.xml](${hostBaseUrl}yum/$(configure_getValue swaddle repository_name)/repodata/repomd.xml) file are $(swaddle_gpg_signatureMarkdown 'signed using the' 'unfortunately unsigned')\* It:-

* is suitable for CentOS 5, 6 and 7.
* should also work on RedHat Enterprise Linux (RHEL) 5, 6 and 7
* and Fedora
* it may work on SuSE with zypper.

To make it easy to use our repository, you can use our [install.sh](${hostBaseUrl}yum//$(configure_getValue swaddle repository_name)/install.sh \"Yum install script for $(configure_getValue swaddle repository_name)\"):- \*

\`\`\`bash
curl --fail --silent --show-error --location '${hostBaseUrl}yum/$(configure_getValue swaddle repository_name)/install.sh' | sh
\`\`\`

This script asks for permission with sudo for every step. If you don't want to use our install script, then you can repeat the steps it takes below:-

* $(swaddle_gpg_signatureMarkdown 'Download and import using `sudo rpm --import /path/to/downloaded/key` our' 'Trust the unsigned repository is OK') ${downloadKeyAdditionalMarkdown}
* Create the file `/etc/yum.repos.d/$(configure_getValue swaddle repository_name).repo` and populate it with:-

\`\`\`bash
$(_swaddle_repository_yum_createRepoFileContent)
\`\`\`

Optionally, then:-

* Update the list of packages using \`sudo yum update\`
* See the packages available in this repository using \`sudo yum group info $repositoryName\`

At this time, we do not provide a \`$(configure_getValue swaddle repository_name)-release\` RPM as one doesn't offer any advantages over these steps.

\* The signature of this file is only checked by SuSE; all RedHat-derived distros are theoretically vulnerable to package-substitution MITM attacks.
"
}

swaddle_repository_yum_adjustUrl()
{
	local variableName="$1"
	local url="$2"
	if core_variable_doesNotEndWith "$url" /; then
		url="$url"/
	fi
	core_variable_setVariable "$variableName" "$url"
}

swaddle_repository_yum_createRepodata()
{
	rm -rf "$_swaddle_repository_yum_repodataPath"
	mkdir -m 0755 -p "$_swaddle_repository_yum_repodataPath"
	
	_swaddle_repository_yum_rpmxml_repomdXmlFilePath="$_swaddle_repository_yum_repodataPath"/repomd.xml
	
	swaddle_repository_yum_rpmxml_startRepodata
		swaddle_repository_yum_primaryXmlFile
		swaddle_repository_yum_otherXmlFile
		swaddle_repository_yum_filelistsXmlFile
		swaddle_repository_yum_compsXmlFile "$repositoryName"
	swaddle_repository_yum_rpmxml_endRepodata
}

_swaddle_repository_yum_createRepoFileContent()
{
	if core_variable_isFalse "$(swaddle_configure_sign)"; then
		local gpgKey="#gpgkey not set as repository is unsigned"
		local gpgCheck='gpgcheck=0'
	else
		# If installed using a REPO-release.rpm, then file:///etc/pki/rpm-gpg/RPM-GPG-KEY-${repositoryName}
		local gpgKey="gpgkey=${hostBaseUrl}${repositoryName}/rpm/RPM-GPG-KEY-${repositoryName}"
		local gpgCheck='gpgcheck=1'
	fi
	
	cat <<-EOF
		[${repositoryName}]
		name=${repositoryName}
		baseurl=${hostBaseUrl}yum/${repositoryName}
		mirrorlist=${hostBaseUrl}yum/${repositoryName}/mirrorlist
		${gpgKey}
		${gpgCheck}
		enabled=1
		protect=0
	EOF
}

swaddle_repository_yum_createMirrorlist()
{
	local mirrorListFilePath="$_swaddle_repository_yum_repositoryPath"/mirrorlist
	
	_swaddle_repository_yum_createMirrorlist_callback()
	{
		local mirrorBaseUrl
		swaddle_repository_yum_adjustUrl mirrorBaseUrl "$core_variable_array_element"
		printf '%s%s\n' "$mirrorBaseUrl" "$repositoryName"/rpm
	}
	configure_iterateOverArrayWithDefaultsIfEmpty 'swaddle_yum' mirrors _swaddle_repository_yum_createMirrorlist_callback "$hostBaseUrl" >"$mirrorListFilePath"
	
	swaddle_touch_setMtimeAndAtime "$mirrorListFilePath"
}

core_usesIn swaddle gpg
swaddle_repository_yum_exportSigningKey()
{
	swaddle_gpg_exportSigningKey "$_swaddle_repository_yum_repositoryPath"/RPM-GPG-KEY-"$repositoryName"
}

swaddle_repository_yum_signRepomdForSuse()
{
	if core_variable_isFalse "$(swaddle_configure_sign)"; then
		return 0
	fi
	
	# eg http://download.opensuse.org/distribution/13.1/repo/oss/suse/repodata/
	ln -f "$_swaddle_repository_yum_repositoryPath"/RPM-GPG-KEY-"$repositoryName" "$_swaddle_repository_yum_repodataPath"/repomd.xml.key
	swaddle_digest_signFile "$_swaddle_repository_yum_repodataPath"/repomd.xml
}

swaddle_repository_yum_createInstallScript()
{
	local installScriptFilePath="$_swaddle_repository_yum_repositoryPath"/install.sh
	
	# This ought to go into a $repositoryName-release.VERSION.rpm, but that's just painful
	local repoFilePath='$repoFilePath'
	cat >"$installScriptFilePath" <<-EOF
		#!/usr/bin/env sh
		set -e
		set -u
		
		repoFilePath='/etc/yum.repos.d/$repositoryName.repo'
		repoFileContent='$(_swaddle_repository_yum_createRepoFileContent)'
		
		sudo -p "Password for %p is required to allow root to remove '$repoFilePath' and perform install: " rm -rf "$repoFilePath"
		printf '%s' "$repoFileContent" | sudo -p "Password for %p is required to allow root to install '$repoFilePath': " tee "$repoFilePath" >/dev/null
		sudo -p "Password for %p is required to allow root to update yum: " yum update
		sudo -p "Password for %p is required to allow root to see all packages in $repositoryName: " yum group info $repositoryName
	EOF
	chmod 0755 "$installScriptFilePath"
	swaddle_touch_setMtimeAndAtime "$installScriptFilePath"
}
