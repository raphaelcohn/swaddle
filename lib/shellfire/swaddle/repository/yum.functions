core_usesIn xmlwriter
core_usesIn swaddle touch

core_usesIn swaddle/repository/yum primaryXmlFile otherXmlFile filelistsXmlFile compsXmlFile
core_dependency_requires '*' mkdir date
swaddle_repository_yum()
{
	local timestamp="$(configure_getConfigurationSetting swaddle timestamp)"
	local repositoryName="$(configure_getConfigurationSetting swaddles repositoryName)"
	local hostBaseUrl
	swaddle_repository_yum_adjustUrl hostBaseUrl "$(configure_getConfigurationSetting swaddles hostBaseUrl)"
	
	swaddle_repository_yum_createRepodata
	swaddle_repository_yum_createRepoFile
	swaddle_repository_yum_createMirrorlist
	swaddle_repository_yum_exportSigningKey
	swaddle_repository_yum_signRepomdForSuse
	swaddle_repository_yum_createInstallScript
}

swaddle_repository_yum_adjustUrl()
{
	local variableName="$1"
	local url="$2"
	if core_variable_doesNotEndWith "$url" /; then
		url="$url"/
	fi
	core_variable_setVariable "$variableName" "$url"
}

swaddle_repository_yum_createRepodata()
{
	local _swaddle_repository_yum_repodataPath="$_swaddle_repository_yum_parentPath"/repodata
	mkdir -m 0755 -p "$_swaddle_repository_yum_repodataPath"
	
	_swaddle_repository_yum_rpmxml_repomdXmlFilePath="$_swaddle_repository_yum_repodataPath"/repomd.xml
	
	swaddle_repository_yum_rpmxml_startRepodata
		swaddle_repository_yum_primaryXmlFile
		swaddle_repository_yum_otherXmlFile
		swaddle_repository_yum_filelistsXmlFile
		swaddle_repository_yum_compsXmlFile "$repositoryName"
	swaddle_repository_yum_rpmxml_endRepodata
}

swaddle_repository_yum_createRepoFile()
{
	if core_variable_isTrue "$(configure_getConfigurationSetting swaddles sign)"; then
		local gpgCheck=1
	else
		local gpgCheck=0
	fi
	
	cat >"$_swaddle_repository_yum_parentPath"/"$repositoryName".repo <<-EOF
		[${repositoryName}]
		name=${repositoryName}
		baseurl=${hostBaseUrl}${repositoryName}/rpm
		mirrorlist=${hostBaseUrl}${repositoryName}/rpm/mirrorlist
		#gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-${repositoryName}
		gpkgkey=${hostBaseUrl}${repositoryName}/rpm/RPM-GPG-KEY-${repositoryName}
		gpgcheck=${gpgCheck}
		enabled=1
		protect=0
	EOF
	swaddle_touch_setMtimeAndAtime "$timestamp" "$_swaddle_repository_yum_parentPath"/"$repositoryName".repo
}

swaddle_repository_yum_createMirrorlist()
{
	_swaddle_repository_yum_createMirrorlist_callback()
	{
		local mirrorBaseUrl
		swaddle_repository_yum_adjustUrl hostBaseUrl "$core_variable_array_element"
		printf '%s%s\n' "$mirrorBaseUrl" "$repositoryName"/rpm
	}
	
	{
		printf '%s%s\n' "$hostBaseUrl" "$repositoryName"/rpm
		
		local configurationSettingValue
		_configure_configurationSettingValue 'swaddles' 'mirrors'
		core_variable_array_iterate "$configurationSettingValue" _swaddle_repository_yum_createMirrorlist_callback
		
	} >"$_swaddle_repository_yum_parentPath"/mirrorlist
	
	swaddle_touch_setMtimeAndAtime "$timestamp" "$_swaddle_repository_yum_parentPath"/mirrorlist
}

swaddle_repository_yum_exportSigningKey()
{
	gpg --home "$(configure_getConfigurationSetting swaddle keyring)" --armor --export "$(configure_getConfigurationSetting swaddle signer)" >"$_swaddle_repository_yum_parentPath"/RPM-GPG-KEY-"$repositoryName"
	swaddle_touch_setMtimeAndAtime "$timestamp" "$_swaddle_repository_yum_parentPath"/RPM-GPG-KEY-"$repositoryName"
}

swaddle_repository_yum_signRepomdForSuse()
{
	# OpenSUSE-like (http://download.opensuse.org/distribution/13.1/repo/oss/suse/repodata/)
	ln "$_swaddle_repository_yum_parentPath"/RPM-GPG-KEY-"$repositoryName" "$_swaddle_repository_yum_repodataPath"/repomd.xml.key
	
	gpg --home ~/.gnupg --default-key "$(configure_getConfigurationSetting swaddle signer)" --armor --sign "$_swaddle_repository_yum_repodataPath"/repomd.xml
	swaddle_touch_setMtimeAndAtime "$timestamp" "$_swaddle_repository_yum_repodataPath"/repomd.xml.asc
}

swaddle_repository_yum_createInstallScript()
{
	# This ought to go into a $repositoryName-release.VERSION.rpm, but that's just painful
	cat >"$_swaddle_repository_yum_parentPath"/install.sh <<-EOF
		#!/usr/bin/env sh
		set -e
		set -u
		
		repoFilePath='/etc/yum.repos.d/$repositoryName.repo'
		sudo -p "Password to allow root to remove '$repoFilePath' and perform install: " rm -rf "$repoFilePath"
		curl --fail --location --silent --show-error '${hostBaseUrl}${repositoryName}/rpm/${repositoryName}.repo' | sudo -p "Password to allow root to install '$repoFilePath': " tee "$repoFilePath" >/dev/null
		echo "Now run 'sudo yum update' and 'sudo yum group info $repositoryName' to see all packages available."
	EOF
	chmod 0755 "$_swaddle_repository_yum_parentPath"/install.sh
	swaddle_touch_setMtimeAndAtime "$timestamp" "$_swaddle_repository_yum_parentPath"/install.sh
}
