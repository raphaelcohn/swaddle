core_usesIn xmlwriter
core_usesIn swaddle touch digest compress
core_usesIn swaddle/repository/yum primaryXmlFile otherXmlFile filelistsXmlFile compsXmlFile

core_dependency_requires '*' mkdir date
swaddle_repository_yum()
{	
	local repositoryName="$(configure_getConfigurationSetting swaddle repository_name)"
	local hostBaseUrl
	swaddle_repository_yum_adjustUrl hostBaseUrl "$(configure_getConfigurationSetting swaddle hostBaseUrl)"

	local _swaddle_repository_yum_repositoryPath="$_swaddle_repository_parentPath"/"$repositoryName"
	local _swaddle_repository_yum_repodataPath="$_swaddle_repository_yum_repositoryPath"/repodata
	
	swaddle_repository_yum_createRepodata
	swaddle_repository_yum_createRepoFile
	swaddle_repository_yum_createMirrorlist
	swaddle_repository_yum_exportSigningKey
	swaddle_repository_yum_signRepomdForSuse
	swaddle_repository_yum_createInstallScript
}

swaddle_repository_yum_registerConfiguration()
{
	configure_register Array NotEmpty swaddle_yum mirrors
}

swaddle_repository_yum_adjustUrl()
{
	local variableName="$1"
	local url="$2"
	if core_variable_doesNotEndWith "$url" /; then
		url="$url"/
	fi
	core_variable_setVariable "$variableName" "$url"
}

swaddle_repository_yum_createRepodata()
{
	mkdir -m 0755 -p "$_swaddle_repository_yum_repodataPath"
	
	_swaddle_repository_yum_rpmxml_repomdXmlFilePath="$_swaddle_repository_yum_repodataPath"/repomd.xml
	
	swaddle_repository_yum_rpmxml_startRepodata
		swaddle_repository_yum_primaryXmlFile
		swaddle_repository_yum_otherXmlFile
		swaddle_repository_yum_filelistsXmlFile
		swaddle_repository_yum_compsXmlFile "$repositoryName"
	swaddle_repository_yum_rpmxml_endRepodata
}

swaddle_repository_yum_createRepoFile()
{
	local repoFilePath="$_swaddle_repository_yum_repositoryPath"/"$repositoryName".repo
	
	if core_variable_isFalse "$(swaddle_configure_sign)"; then
		local gpgKey="#"
		local gpgCheck='gpgcheck=0'
	else
		# If installed using a REPO-release.rpm, then file:///etc/pki/rpm-gpg/RPM-GPG-KEY-${repositoryName}
		local gpgKey="gpgkey=${hostBaseUrl}${repositoryName}/rpm/RPM-GPG-KEY-${repositoryName}"
		local gpgCheck='gpgcheck=1'
	fi
	
	cat >"$repoFilePath" <<-EOF
		[${repositoryName}]
		name=${repositoryName}
		baseurl=${hostBaseUrl}yum/${repositoryName}
		mirrorlist=${hostBaseUrl}yum/${repositoryName}/mirrorlist
		${gpgKey}
		${gpgCheck}
		enabled=1
		protect=0
	EOF
	swaddle_touch_setMtimeAndAtime "$repoFilePath"
	swaddle_digest_file "$repoFilePath"
	swaddle_compress_gzip "$repoFilePath"
}

swaddle_repository_yum_createMirrorlist()
{
	local mirrorListFilePath="$_swaddle_repository_yum_repositoryPath"/mirrorlist
	
	_swaddle_repository_yum_createMirrorlist_callback()
	{
		local mirrorBaseUrl
		swaddle_repository_yum_adjustUrl mirrorBaseUrl "$core_variable_array_element"
		printf '%s%s\n' "$mirrorBaseUrl" "$repositoryName"/rpm
	}
	configure_iterateOverArrayWithDefaultsIfEmpty 'swaddle_yum' mirrors _swaddle_repository_yum_createMirrorlist_callback "$hostBaseUrl" >"$mirrorListFilePath"
	
	swaddle_touch_setMtimeAndAtime "$mirrorListFilePath"
	swaddle_digest_file "$mirrorListFilePath"
	swaddle_compress_gzip "$mirrorListFilePath"
}

core_usesIn swaddle gpg
swaddle_repository_yum_exportSigningKey()
{
	if core_variable_isFalse "$(swaddle_configure_sign)"; then
		return 0
	fi
	
	local gpgKeyFilePath="$_swaddle_repository_yum_repositoryPath"/RPM-GPG-KEY-"$repositoryName"
	
	swaddle_gpg_exportSigningKey >"$gpgKeyFilePath"
	swaddle_touch_setMtimeAndAtime "$gpgKeyFilePath"
	swaddle_compress_gzip "$gpgKeyFilePath"
}

swaddle_repository_yum_signRepomdForSuse()
{
	if core_variable_isFalse "$(swaddle_configure_sign)"; then
		return 0
	fi
	
	# eg http://download.opensuse.org/distribution/13.1/repo/oss/suse/repodata/
	ln -f "$_swaddle_repository_yum_repositoryPath"/RPM-GPG-KEY-"$repositoryName" "$_swaddle_repository_yum_repodataPath"/repomd.xml.key
	swaddle_digest_signFile "$_swaddle_repository_yum_repodataPath"/repomd.xml
}

swaddle_repository_yum_createInstallScript()
{
	local installScriptFilePath="$_swaddle_repository_yum_repositoryPath"/install.sh
	
	# This ought to go into a $repositoryName-release.VERSION.rpm, but that's just painful
	local repoFilePath='$repoFilePath'
	cat >"$installScriptFilePath" <<-EOF
		#!/usr/bin/env sh
		set -e
		set -u
		
		repoFilePath='/etc/yum.repos.d/$repositoryName.repo'
		sudo -p "Password to allow root to remove '$repoFilePath' and perform install: " rm -rf "$repoFilePath"
		curl --fail --location --silent --show-error '${hostBaseUrl}/yum/${repositoryName}/${repositoryName}.repo' | sudo -p "Password to allow root to install '$repoFilePath': " tee "$repoFilePath" >/dev/null
		echo "Now run 'sudo yum update' and 'sudo yum group info $repositoryName' to see all packages available."
	EOF
	swaddle_touch_setMtimeAndAtime "$installScriptFilePath"
	swaddle_digest_file "$installScriptFilePath"
	chmod 0755 "$installScriptFilePath"
	swaddle_compress_gzip "$installScriptFilePath"
}
