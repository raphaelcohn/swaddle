# This file is part of swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


core_usesIn xmlwriter
core_usesIn swaddle touch digest

swaddle_repository_yum_rpmxml_packageCount()
{
	set +f
	set -- "$_swaddle_repository_yum_repositoryPath"/*/*.rpm
	set -f
	
	if [ ! -e "$1" ]; then
		set --
	fi
	
	printf '%s' $#
}

swaddle_repository_yum_rpmxml_iterateRpmFiles()
{
	local callback="$1"

	set +f
	set -- "$_swaddle_repository_yum_repositoryPath"/*/*.rpm
	set -f
	
	if [ ! -e "$1" ]; then
		set --
	fi

	local rpmFilePath
	for rpmFilePath in "$@"
	do
		$callback
	done
}

core_dependency_requires '*' rpm
swaddle_repository_yum_rpmxml_files()
{
	local filterCallback="$1"
	
	local filePath
	local fileClass
	# Note the use of --quiet to suppress RPM 4 warnings about signatures
	rpm --quiet --query --package "$rpmFilePath" --queryformat '[%{FILENAMES}\t%{FILECLASS}\n]' 2>/dev/null | while IFS="$(printf '\t')" read -r filePath fileClass
	do
		if ! $filterCallback; then
			continue
		fi
		
		set -- file
		
		if [ "$fileClass" = 'directory' ]; then
			set -- "$@" type dir
		fi
		
		xmlwriter_leaf "$@" "$filePath"
	done
}

swaddle_repository_yum_rpmxml_startRepodata()
{	
	{
		xmlwriter_declaration '1.0' 'UTF-8' 'no'
		xmlwriter_open repomd xmlns "http://linux.duke.edu/metadata/repo" xmlns:rpm "http://linux.duke.edu/metadata/rpm"
			xmlwriter_leaf revision "$(swaddle_configure_timestamp)"
	} >"$_swaddle_repository_yum_rpmxml_repomdXmlFilePath"
}

core_usesIn swaddle compress
swaddle_repository_yum_rpmxml_endRepodata()
{
	{
		xmlwriter_close repomd
	} >>"$_swaddle_repository_yum_rpmxml_repomdXmlFilePath"
	
	swaddle_touch_setMtimeAndAtime "$_swaddle_repository_yum_rpmxml_repomdXmlFilePath"
}

core_usesIn swaddle compress
core_dependency_requires '*' stat mv rm
swaddle_repository_yum_rpmxml_addToRepodata()
{
	local fileName="$1"
	
	local dataType="$fileName"
	local filePath="$_swaddle_repository_yum_repodataPath"/"$fileName".xml
	
	swaddle_touch_setMtimeAndAtime "$filePath"
	
	local digest="$(swaddle_digest sha256 "$filePath")"
	local size="$(stat -c '%s' "$filePath")"

	compress_gzip "$filePath"
	rm "$filePath"
	local compressedFilePath="$filePath".gz
	local digestGz="$(swaddle_digest sha256 "$compressedFilePath")"
	local sizeGz="$(stat -c '%s' "$compressedFilePath")"

	local newFileName="$digestGz"-"$fileName".xml.gz
	local newFilePath="$_swaddle_repository_yum_repodataPath"/"$newFileName"
	mv "$compressedFilePath" "$newFilePath"
	swaddle_touch_setMtimeAndAtime "$newFilePath"

	{
		xmlwriter_open data type "$dataType"

			xmlwriter_leaf checksum type sha256 "$digestGz"
			xmlwriter_leaf open-checksum type sha256 "$digest"
			xmlwriter_leaf location href repodata/"$newFileName"
			xmlwriter_leaf timestamp "$(swaddle_configure_timestamp)"
			xmlwriter_leaf size $sizeGz
			xmlwriter_leaf open-size $size

		xmlwriter_close data
	} >>"$_swaddle_repository_yum_rpmxml_repomdXmlFilePath"
}

swaddle_repository_yum_rpmxml_addToRepodataComps()
{
	# What a mess - the XML is completely inconsistent
	{
		local fileName="$1"
		local dataType="$2"
		
		local filePath="$_swaddle_repository_yum_repodataPath"/"$fileName".xml
		local digest="$(swaddle_digest sha256 "$filePath")"
		local size="$(stat -c '%s' "$filePath")"
		local digestFileName="$digest"-"$fileName".xml
		local digestFilePath="$_swaddle_repository_yum_repodataPath"/"$digestFileName"
		mv "$filePath" "$digestFilePath"
		swaddle_touch_setMtimeAndAtime "$digestFilePath"
		
		xmlwriter_open data type "$dataType"
	
			xmlwriter_leaf checksum type sha256 "$digest"
			xmlwriter_leaf location href repodata/"$digestFileName"
			xmlwriter_leaf timestamp "$(swaddle_configure_timestamp)"
			xmlwriter_leaf size $size
	
		xmlwriter_close data
	
		compress_gzip "$digestFilePath"
		local compressedDigestFilePath="$digestFilePath".gz
		local digestGz="$(swaddle_digest sha256 "$compressedDigestFilePath")"
		local sizeGz="$(stat -c '%s' "$compressedDigestFilePath")"
		swaddle_touch_setMtimeAndAtime "$compressedDigestFilePath"
	
		xmlwriter_open data type "$dataType"_gz
	
			xmlwriter_leaf checksum type sha256 "$digestGz"
			xmlwriter_leaf open-checksum type sha256 "$digest"
			xmlwriter_leaf location href repodata/"$digestFileName".gz
			xmlwriter_leaf timestamp "$(swaddle_configure_timestamp)"
			xmlwriter_leaf size $sizeGz
	
		xmlwriter_close data
	} >>"$_swaddle_repository_yum_rpmxml_repomdXmlFilePath"
}
