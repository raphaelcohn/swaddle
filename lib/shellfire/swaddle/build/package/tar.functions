# This file is part of raphaelcohn swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of raphaelcohn swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of raphaelcohn swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


core_usesIn swaddle webserverFiles

swaddle_build_package_tar_registerConfiguration()
{
	configure_register Value Boolean swaddle_tar bomb 'no'
	configure_register Array Compression swaddle_tar compressions
}

core_usesIn swaddle/build/generators manpage copyinreadme copyright
swaddle_build_package_tar_generateContent()
{
	swaddle_build_generators_manpage_generate no '/usr'
	swaddle_build_generators_copyinreadme_generate no '/usr' README
	swaddle_build_generators_copyright_generate no '/usr' copyright
	
	# Root of tar ball
	swaddle_build_generators_copyinreadme_generate no '/' README
	swaddle_build_generators_copyright_generate no '/' COPYRIGHT
}

swaddle_build_package_tar()
{
	core_functions_execute _swaddle_build_package_tar_functions "$@"
}

core_dependency_requires '*' tar mv
core_functions_register _swaddle_build_package_tar_functions swaddle_build_package_tar_createTarball
swaddle_build_package_tar_createTarball()
{
	local repositoryName="$(configure_getValue swaddle repository_name)"
	local tarballParentPath="$_swaddle_repository_parentPath"/"$repositoryName"
	
	mkdir -m 0755 -p "$tarballParentPath"
	swaddle_touch_setMtimeAndAtime "$tarballParentPath"
	
	local baseName="${_swaddle_build_swaddleName}_$(swaddle_configure_epochVersionIteration)_${_swaddle_build_package_translatedArchitecture}"
	_swaddle_build_package_tar_tarballFileName="$tarballParentPath"/"$baseName".tar
	
	swaddle_compress_variants_clean "$_swaddle_build_package_tar_tarballFileName"
	
	if core_variable_isTrue "$(configure_getValue swaddle_tar bomb)"; then
		local directory="$_swaddle_build_package_root"
		local contents=.
	else
		swaddle_simulateroot_execute mv "$_swaddle_build_package_root" "$_swaddle_build_package_temporaryFolderPath"/"$baseName"
		
		local directory="$_swaddle_build_package_temporaryFolderPath"
		local contents="$baseName"
	fi
	
	swaddle_simulateroot_execute tar \
		--create \
		--file "$_swaddle_build_package_tar_tarballFileName" \
		--numeric-owner \
		--directory "$directory" \
		"$contents"
	
	swaddle_simulateroot_ownAsExecutingUser "$_swaddle_build_package_tar_tarballFileName"
	
	swaddle_touch_setMtimeAndAtime "$_swaddle_build_package_tar_tarballFileName"
}

core_usesIn swaddle compress
core_functions_register _swaddle_build_package_tar_functions swaddle_build_package_tar_compress
swaddle_build_package_tar_compress()
{
	_swaddle_build_package_tar_compress_callback()
	{
		if [ "$_swaddle_build_package_architecture" = 'all' ]; then
			local name="$_swaddle_build_swaddleName tarball"
		else
			local name="$_swaddle_build_swaddleName ${_swaddle_build_package_translatedArchitecture} tarball"
		fi
		
		case "$compressor" in
			
			# Also application/x-gtar for tar.*
			none)
				local mimeType="application/x-tar"
				local descriptiveName="$name"
			;;
			
			*)
				local mimeType="$(swaddle_compress_mimeType "$compressor")"
				local uppercaseFileCompression="$(printf '%s' "$compressor" | tr 'a-z' 'A-Z')"
				local descriptiveName="$name ($uppercaseFileCompression compressed)"
			;;
			
		esac
		
		swaddle_publishers_publish "$descriptiveName" "$compressedFileName" "$mimeType"
	}
	
	swaddle_compress_variants 'swaddle_tar' 'compressions' "$_swaddle_build_package_tar_tarballFileName" _swaddle_build_package_tar_compress_callback 'gzip' 'lrzip'
}
