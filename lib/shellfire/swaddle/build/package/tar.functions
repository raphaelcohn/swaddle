swaddle_build_package_tar_registerConfiguration()
{
	configure_register Value DebPackageArchitecture swaddle_tar architecture 'all'
	configure_register Value Boolean swaddle_tar bomb 'no'
	configure_register Array TarCompression swaddle_tar compressions
}

swaddle_build_package_tar()
{
	core_functions_execute _swaddle_build_package_tar_functions "$@"
}

core_functions_register _swaddle_build_package_tar_functions swaddle_build_package_tar_computeTarVersion
swaddle_build_package_tar_computeTarVersion()
{
	local epoch="$(configure_getConfigurationSetting swaddle epoch)"
	local version="$(configure_getConfigurationSetting swaddle version)"
	local iteration="$(configure_getConfigurationSetting swaddle iteration)"
	if [ -z "$epoch" ]; then
		_swaddle_build_package_tar_version="$version"-"$iteration"
	elif [ "$epoch" = '0' ]; then
		_swaddle_build_package_tar_version="$version"-"$iteration"
	else
		_swaddle_build_package_tar_version="$epoch":"$version"-"$iteration"
	fi
}

core_dependency_requires '*' tar mv
core_functions_register _swaddle_build_package_tar_functions swaddle_build_package_tar_createTarball
swaddle_build_package_tar_createTarball()
{
	mkdir -m 0755 -p "$_swaddle_repository_tar_parentPath"
	swaddle_touch_setMtimeAndAtime "$_swaddle_repository_tar_parentPath"
	
	local baseName="${_swaddle_build_swaddleName}_${_swaddle_build_package_tar_version}_$(swaddle_configure_tar_architecture)"
	_swaddle_build_package_tar_tarballFileName="$_swaddle_repository_tar_parentPath"/"$baseName".tar
		
	if core_variable_isTrue "$(configure_getConfigurationSetting swaddle_tar bomb)"; then
		local directory="$_swaddle_build_package_root"
	else
		swaddle_fakeroot "$_swaddle_build_package_rootFakerootFilePath" "$_swaddle_build_package_rootFakerootFilePath" mv "$_swaddle_build_package_root" "$_swaddle_build_package_temporaryFolderPath"/"$baseName"
		
		local directory="$_swaddle_build_package_temporaryFolderPath"/"$baseName"
	fi
	
	swaddle_fakeroot "$_swaddle_build_package_rootFakerootFilePath" "$_swaddle_build_package_rootFakerootFilePath" tar "$@" \
		--create \
		--file "$_swaddle_build_package_tar_tarballFileName" \
		--numeric-owner \
		--directory "$directory" \
		.
	 
	swaddle_digest_file "$_swaddle_build_package_tar_tarballFileName"
}

core_usesIn swaddle compress
core_functions_register _swaddle_build_package_tar_functions swaddle_build_package_tar_compress
swaddle_build_package_tar_compress()
{
	_swaddle_build_package_tar_compress_callback()
	{
		local compression="$core_variable_array_element"
		swaddle_compress_${compression} "$_swaddle_build_package_tar_tarballFileName"
		swaddle_digest_file "$_swaddle_build_package_tar_tarballFileName".$(swaddle_compress_extension "$compression")
	}
	
	configure_iterateOverArrayWithDefaultsIfEmpty 'swaddle_tar' 'compressions' _swaddle_build_package_tar_compress_callback 'gzip'
}
