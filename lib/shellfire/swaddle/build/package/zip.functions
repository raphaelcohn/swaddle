# This file is part of swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


core_usesIn swaddle webserverFiles

swaddle_build_package_zip_registerConfiguration()
{
	configure_register Value Boolean swaddle_zip bomb 'yes'
	configure_register Value NotEmpty swaddle_zip extension 'zip'
	# Supported since 2003, but only since 2012 in Python. Disabled on Mac OS X infozip, doesn't work with minizip, either.
	configure_register Value Boolean swaddle_zip use_bzip2 'no'
}

core_usesIn swaddle/build/generators copyinreadme copyright
swaddle_build_package_zip_generateContent()
{
	# Root of archive
	swaddle_build_generators_copyinreadme_generate no '/' README
	swaddle_build_generators_copyright_generate no '/' COPYRIGHT
}

swaddle_build_package_zip()
{
	core_functions_execute _swaddle_build_package_zip_functions "$@"
}

core_dependency_requires '*' zip mkdir rm mv
core_functions_register _swaddle_build_package_zip_functions swaddle_build_package_zip_create
swaddle_build_package_zip_create()
{
	local repositoryName="$(configure_getValue swaddle repository_name)"
	local zipParentPath="$_swaddle_repository_parentPath"/"$repositoryName"
	
	mkdir -m 0755 -p "$zipParentPath"
	swaddle_touch_setMtimeAndAtime "$zipParentPath"
	
	local baseName="${_swaddle_build_swaddleName}_$(swaddle_configure_epochVersionIteration)_${_swaddle_build_package_translatedArchitecture}"
	local extension="$(configure_getValue swaddle_zip extension)"
	_swaddle_build_package_zip_filePath="$zipParentPath"/"$baseName"."$(configure_getValue swaddle_zip extension)"
	
	rm -f "$_swaddle_build_package_zip_filePath" "$zipParentPath"/"$baseName"."$extension"
	
	if core_variable_isTrue "$(configure_getValue swaddle_zip bomb)"; then
		local directory="$_swaddle_build_package_root"
		local contents=.
	else
		swaddle_simulateroot_execute mv "$_swaddle_build_package_root" "$_swaddle_build_package_temporaryFolderPath"/"$baseName"
		
		local directory="$_swaddle_build_package_temporaryFolderPath"
		local contents="$baseName"
	fi
	
	local options
	local options_intialised
	core_variable_array_initialise options
	
	if core_variable_isTrue "$(configure_getValue swaddle_zip use_bzip2)"; then
		core_variable_array_append options -Z bzip2
	fi
	
	core_variable_array_append options -z -q -r -9 "$_swaddle_build_package_zip_filePath" "$contents"
	
	core_variable_array_passToFunctionAsArguments options _swaddle_build_package_zip_create
	
	swaddle_touch_setMtimeAndAtime "$_swaddle_build_package_zip_filePath"
	
	local archiveKind="$(printf '%s' "$extension" | tr 'a-z' 'A-Z')"
	
	if [ "$_swaddle_build_package_architecture" = 'all' ]; then
		local descriptiveName="${_swaddle_build_swaddleName} archive ($archiveKind)"
	else
		local descriptiveName="${_swaddle_build_swaddleName} ${_swaddle_build_package_translatedArchitecture} archive ($archiveKind)"
	fi
	swaddle_publishers_publish "$descriptiveName" "$_swaddle_build_package_zip_filePath" 'application/zip'
}

_swaddle_build_package_zip_create()
{
	pushd "$directory"
		
		configure_getValue swaddle_package description | zip "$@"
		
	popd
}
