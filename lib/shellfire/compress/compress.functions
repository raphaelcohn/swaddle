# This file is part of swaddle. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT. No part of swaddle, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of swaddle. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/swaddle/master/COPYRIGHT.


core_dependency_requires '*' rm
swaddle_compress_variants_clean()
{
	local existingFilePath="$1"
	
	local compressor
	for compressor in none lzop zip gzip bzip2 rzip lzma xz lzip zpaq lrzip
	do
		rm -f "$existingFilePath"$(swaddle_compress_extension "$compressor")
	done
}

core_dependency_requires '*' rm
swaddle_compress_variants()
{
	local namespace="$1"
	local valueName="$2"
	local originalFilePath="$3"
	local callbackPerCompressedFile="$4"
	shift 4

	local keepUncompressedFile=no
	_swaddle_compress_variants_callback()
	{
		local compressor="$core_variable_array_element"
		if [ "$compressor" = 'none' ]; then
			keepUncompressedFile=yes
		else
			swaddle_compress_${compressor} "$originalFilePath"
		fi
		local compressedFileName="$originalFilePath"$(swaddle_compress_extension "$compressor")
		if [ -n "$callbackPerCompressedFile" ]; then
			$callbackPerCompressedFile "$compressedFileName"
		fi
	}
	
	configure_iterateOverArrayWithDefaultsIfEmpty "$namespace" "$valueName" _swaddle_compress_variants_callback "$@"
	
	if core_variable_isFalse "$keepUncompressedFile"; then
		rm "$originalFilePath"
	fi
}

swaddle_compress_extension()
{
	case "$1" in
		
		none)
			printf ''
		;;
		
		lzop)
			printf '.lzo'
		;;
		
		zip)
			printf '.zip'
		;;
		
		gzip)
			printf '.gz'
		;;
		
		bzip2)
			printf '.bz2'
		;;
		
		rzip)
			printf '.rz'
		;;
		
		lzma)
			printf '.lzma'
		;;
		
		xz)
			printf '.xz'
		;;
		
		lzip)
			printf '.lz'
		;;
		
		zpaq)
			printf '.zpaq'
		;;
		
		lrzip)
			printf '.lrz'
		;;
		
	esac
}

swaddle_compress_mimeType()
{
	case "$1" in
		
		none)
			printf 'application/octet-stream'
		;;
		
		lzop)
			printf 'application/x-lzop'
		;;
		
		zip)
			printf 'application/zip'
		;;
		
		gzip)
			printf 'application/gzip'
		;;
		
		bzip2)
			printf 'application/x-bzip2'
		;;
		
		rzip)
			printf 'application/octet-stream'
		;;
		
		lzma)
			printf 'application/x-lzma'
		;;
		
		xz)
			printf 'application/x-xz'
		;;
		
		lzip)
			printf 'application/x-lzip'
		;;
		
		zpaq)
			printf 'application/octet-stream'
		;;
		
		lrzip)
			printf 'application/x-lrzip'
		;;
		
	esac
}
